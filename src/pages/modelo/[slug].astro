---
// @ts-ignore
import { Masonry } from 'astro-masonry';
import Layout from '../../layouts/Layout.astro';
import { getPosts, getPostsByModel } from '../../services';
import { Image } from 'astro:assets';

export async function getStaticPaths() {
  const posts = await getPosts();
  const slugs = [...new Set(posts.map(post => post.model?.slug?.current).filter(Boolean))];
  
  return slugs.map(slug => ({
    params: { slug },
    props: { slug }
  }));
}

const { slug } = Astro.props;
const modelPosts = await getPostsByModel(slug)
const fullname = modelPosts[0]?.model?.fullname || 'Modelo';
---

<Layout title={fullname}>
  <main>
    <section class="px-4 md:px-10">
      <!-- <h1 class="text-4xl md:text-6xl font-semibold text-center">{fullname}</h1> -->
      <!-- categoria y ubicacion -->
      <div class="border-t border-white/10 space-y-4 py-4 md:py-10">
        <div class="flex items-center gap-4 border-b border-white/10 text-sm py-4">
          <p>{fullname}</p>
          <p class="text-white/50">•</p>
          <p>{modelPosts[0]?.category?.title}</p>
          <p class="text-white/50">•</p>
          <p>{modelPosts[0]?.location?.title}</p>
        </div>

  
        <Masonry
  				class="flex gap-4 md:gap-10"
  				columnClass="flex flex-col gap-4 md:gap-10"
  				breakpointCols={{
  					default: modelPosts.length === 1 ? 1 : 2,
  					1100: 1
  				}}
  				sortByHeight={true}
  			>
          {modelPosts.map((post) => (
            <figure class="w-full bg-slate-950 text-white relative overflow-hidden">
              <Image
                class="w-full" 
                alt={`Foto de ${post.model?.fullname}`}
                width={post.image.asset.metadata.dimensions.width}
                height={post.image.asset.metadata.dimensions.height}
                src={post.image.asset.url} />
            </figure>
          ))}
  			</Masonry>
      </div>
    </section>
  </main>
</Layout> 